class Solution {
public:
    bool isMatch(string s, string p) {
        if(s.size() == 0 && p.size() == 0)
            return true;
        if(p.size()==0)
            return false;
        
        
        bool dp[s.size()+1][p.size()+1];
        
        dp[0][1] = false;
        for(int i = 0;i<s.size();i++){
            dp[i+1][0] = false;
        }
        int idx = 1;
        
        
        while(idx < p.size() && p[idx]=='*'){
            dp[0][idx+1] = true;
            dp[0][idx] = false;
            idx+=2;
        }
        while(idx < p.size()){
            dp[0][idx+1] = false;
            idx++;
        }
        
        dp[0][0] = true;
        for(int i = 0;i<s.size();i++){
            for(int j = 0;j<p.size();j++){
                if(p[j] == '.'){
                    dp[i+1][j+1] = dp[i][j];
                }else if(p[j] == '*'){
                    if(isalpha(p[j-1])){
                        if(p[j-1] == s[i]){
                            dp[i+1][j+1] = dp[i+1][j]||dp[i][j+1]||dp[i+1][j-1];
                        }else{
                            dp[i+1][j+1] = dp[i+1][j-1];
                        }
                    }else{
                        dp[i+1][j+1] = dp[i+1][j]|| dp[i+1][j-1]||dp[i][j+1];
                    }
                    
                }else{
                    if(s[i]==p[j]){
                        dp[i+1][j+1] = dp[i][j];
                    }else{
                        dp[i+1][j+1] = false;
                    }
                }
            }
        }
        
        return dp[s.size()][p.size()];
    }
};
