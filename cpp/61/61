/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL)
            return NULL;
        int num = 0;
        ListNode* tmp = head;
        while(tmp!=NULL)
        {
            tmp = tmp->next;
            num++;
        }
        k%=num;
        if(k==0)
            return head;
        
        ListNode dump = ListNode(-1);
        dump.next=head;
        ListNode* cur = NULL;
        tmp = head;
        for(int i = 0;i<num-k-1;i++)
        {
            tmp = tmp->next;
        }
        cur = tmp->next;
        tmp->next = NULL;
        
        
        dump.next=cur;
        while(cur!=NULL && cur->next!=NULL)
        {
            cur=cur->next;
        }
        if(dump.next == NULL)
            dump.next = head;
        else
            cur->next = head;
        return dump.next;
        
    }
};
