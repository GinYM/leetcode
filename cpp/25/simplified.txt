/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(k == 1)
        {
            return head;
        }
        ListNode dump = ListNode(-1);
        dump.next=head;
        ListNode*cur=&dump;
        ListNode*pre;
        ListNode*next;
        int num = 0;
        while(cur = cur->next)
        {
            num++;
        }
        cur = &dump;
        while(num>=k)
        {
            
            pre = cur;
            cur = cur->next;
            next=cur->next;
            for(int i = 0;i<k-1;i++)
            {
                
                cur->next = next->next;
                next->next=pre->next;
                pre->next=next;
                
                
                next=cur->next;
            }
            num-=k;
        }
        return dump.next;
    }
};
