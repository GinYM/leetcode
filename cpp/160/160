/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int n1=0,n2=0;
        if(headA==NULL || headB==NULL)
            return NULL;
        ListNode*h1,*h2;
        h1=headA;
        h2=headB;
        while(h1!=NULL)
        {
            h1 = h1->next;
            n1++;
        }
        while(h2!=NULL)
        {
            h2 = h2->next;
            n2++;
        }
        h1=headA;
        h2=headB;
        if(n1>n2)
        {
            for(int i = 0;i<n1-n2;i++)
            {
                h1=h1->next;
            }
        }
        else if(n1<n2)
        {
            for(int i = 0;i<n2-n1;i++)
            {
                h2=h2->next;
            }
        }
        while(h1!=NULL && h2!=NULL)
        {
            if(h1==h2)
                return h1;
            h1=h1->next;
            h2=h2->next;
        }
        return NULL;
    }
};
