class Solution {
public:
    int compareVersion(string version1, string version2) {
        int num1,num2;
        int idx1=version1.size()-1;
        int idx2 = version2.size()-1;
        vector<int> split1,split2;
        parse(split1,version1);
        parse(split2,version2);
        for(int i = 0;i<min(split1.size(),split2.size());i++)
        {
           
            if(split1[i] > split2[i])
                return 1;
            else if(split1[i]<split2[i])
                return -1;
            
        }
        
        
        if(split1.size() != split2.size())
        {
            if(split1.size() > split2.size())
            {
                for(int i = split2.size();i<split1.size();i++)
                {
                    
                    if(split1[i]!=0)
                        return 1;
                }
                return 0;
            }
            else
            {
                for(int i = split1.size();i<split2.size();i++)
                {
                    if(split2[i]!=0)
                        return -1;
                }
                return 0;
            }
        }
        else 
            return 0;
        
        
    }
private:
    void parse(vector<int>&store,string version)
    {
        int num = 0;
        for(int i = 0;i<version.size();i++)
        {
            if(version[i] == '.')
            {
                if(i!=0)
                    store.push_back(num);
                
                num  = 0;
            }
            else
            {
                num = num*10+version[i]-'0';
            }
        }
        
        store.push_back(num);
    }
};
