class Solution {
public:
    
    int numIslands(vector<vector<char>>& grid) {
        
        int numr = grid.size();
        if(numr ==0){
            return 0;
        }
        int numc = grid[0].size();
        if(numc == 0){
            return 0;
        }
        int result = 0;
        vector<vector<bool>> isVis(numr, vector<bool>(numc, false));
        
        
        for(int i = 0;i<numr;i++){
            for(int j = 0;j<numc;j++){
                
                if(isVis[i][j] == false && grid[i][j] == '1'){
                    isVis[i][j] = true;
                    search(isVis, i, j, grid);
                    result++;
                }
            }
        }
        return result;
    }
    
    void search(vector<vector<bool>> &isVis, int r, int c, vector<vector<char>>& grid){
        int numr = grid.size();
        int numc = grid[0].size();
        int dirs[][2] = {{1,0},{-1,0},{0,1},{0,-1}};
        for(auto dir : dirs){
            int i = r+dir[0];
            int j = c+dir[1];
            if(i<0 || j<0 || i>=numr || j>=numc || isVis[i][j] == 1 || grid[i][j] == '0'){
                continue;
            }
            isVis[i][j] = 1;
            search(isVis, i, j, grid);
        }
    }
};
