/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = NULL;
        ListNode* start = result;
        int carry = 0;
        while(l1!=NULL && l2 != NULL)
        {
            int sum = l1->val+l2->val+carry;
            if(sum >=10)
            {
                sum = sum%10;
                carry = 1;
            }
            else
            {
                carry = 0;
            }
            if(start == NULL)
            {
                start = new ListNode(sum);
                result = start;
            }
            else
            {
                start->next = new ListNode(sum);
                start = start->next;
            }
            l1 = l1->next;
            l2=l2->next;
        }
        
        ListNode* thenext = NULL;
        
        if(l1 != NULL)
        {
            thenext = l1;
        }
        if(l2 != NULL)
        {
            thenext=l2;
        }
        
        while(thenext!=NULL)
        {
            int sum = thenext->val+carry;
            if(sum >=10)
            {
                sum%=10;
                carry=1;
            }
            else
            {
                carry = 0;
            }
            start->next = new ListNode(sum);
            start = start->next;
            thenext = thenext->next;
            
        }
        
        if(carry == 1)
        {
            start->next = new ListNode(1);
        }
        
        return result;
        
    }
};