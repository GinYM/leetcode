/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return dfs(inorder,0,inorder.size()-1,postorder,0,postorder.size()-1);
    }
private:
    TreeNode*dfs(vector<int>&inorder,int is,int ie,vector<int>&postorder,int ps,int pe)
    {
        if(ps>pe)
            return NULL;
        int pos;
        for(int i = is;i<=ie;i++)
        {
            if(inorder[i] == postorder[pe])
            {
                pos = i;
                break;
            }
        }
        TreeNode* node = new TreeNode(postorder[pe]);
        node->left = dfs(inorder,is,pos-1,postorder,ps,ps+pos-is-1);
        node->right = dfs(inorder,pos+1,ie,postorder,pe-(ie-pos),pe-1);
        return node;
    }
};
