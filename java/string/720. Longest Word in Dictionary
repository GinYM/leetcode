class Solution {
    public String longestWord(String[] words) {
        
        Node root = new Node();
        root.isWord = true;
        for(String word : words){
            buildTrie(root, word);
        }
        String result = "";
        for(String word : words){
            if(check(root, word)){
                if(word.length() > result.length()){
                    result = word;
                }else if(word.length() == result.length() && word.compareTo(result)<0){
                    result = word;
                }
            }
        }
        return result;
    }
    
    public boolean check(Node node, String word){
        for(int i = 0;i<word.length();i++){
            if(node.isWord == false){
                return false;
            }
            node = node.children[word.charAt(i)-'a'];
        }
        return true;
    }
    
    public void buildTrie(Node node, String word){
        
        for(int i = 0;i<word.length();i++){
            
            if(node.children[word.charAt(i)-'a']==null){
                node.children[word.charAt(i)-'a'] = new Node();
            }
            node = node.children[word.charAt(i)-'a'];
        }
        node.isWord = true;
        
    }
    
    class Node{
        public Node[] children;
        public boolean isWord;
        public Node(){
            children = new Node[26];
            isWord = false;
        }
    }
}
