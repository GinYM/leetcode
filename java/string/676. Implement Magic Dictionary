class MagicDictionary {
    public Map<String, List<int[]>> map;
    /** Initialize your data structure here. */
    public MagicDictionary() {
        map = new HashMap<String, List<int[]>>();
    }
    
    /** Build a dictionary through a list of words */
    public void buildDict(String[] dict) {
        for(String str : dict){
            for(int i = 0;i<str.length();i++){
               String word =  str.substring(0,i)+str.substring(i+1);
                if(map.containsKey(word)==false){
                    map.put(word, new ArrayList<int[]>());
                }
                map.get(word).add(new int[]{i, str.charAt(i)-'a'});
            }
        }
    }
    
    /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
    public boolean search(String word) {
        for(int i = 0;i<word.length();i++){
            String str = word.substring(0,i) + word.substring(i+1);
            List<int[]> ret = map.getOrDefault(str, null);
            if(ret == null){
                continue;
            }
            for(int[] record : ret){
                if(record[0] == i && record[1] != word.charAt(i)-'a'){
                    return true;
                }
                
            }
            
        }
        return false;
    }
}

/**
 * Your MagicDictionary object will be instantiated and called as such:
 * MagicDictionary obj = new MagicDictionary();
 * obj.buildDict(dict);
 * boolean param_2 = obj.search(word);
 */
