class Solution {
    public int longestSubstring(String s, int k) {
        int unique = 0;
        int i,j;
        int count[] = new int[26];
        int lessThanK = 0; //number of charater less than k in [i,j]
        int lessIdx = 0;
        int result = 0;
        for(int num = 1;num<=26;num++){ //number of unique character
            Arrays.fill(count, 0);
            unique = 0;
            i = 0;
            j = 0;
            lessThanK = 0;
            while(j<s.length()){
                if(unique <= num){
                    int idx = s.charAt(j)-'a';
                    if(count[idx] == 0){
                        lessThanK++;
                        unique++;
                    }
                    count[idx]++;
                    if(count[idx] == k) lessThanK--;
                    
                    j++;
                }else{
                    int idx = s.charAt(i)-'a';
                    if(count[idx] == k) lessThanK++;
                    count[idx]--;
                    if(count[idx] == 0){
                        unique--;
                        lessThanK--;
                    }
                    i++;
                }
                //System.out.println(unique+" "+lessThanK);
                if(unique == num && lessThanK==0){
                    result = Math.max(j-i, result);
                }
                
            }
        }
        return result;
    }
}
