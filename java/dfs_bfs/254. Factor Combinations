class Solution {
    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if(n == 1){
            return result;
        }
        dfs(result, new ArrayList<Integer>(),2,n-1,n);
        return result;
    }
    
    public void dfs(List<List<Integer>> result, List<Integer> prev, int start, int end, int num){
        //System.out.println(num+" "+start);
        if(end < start){
            if(num == 1){
                List<Integer> tmp = new ArrayList<Integer>(prev);
                result.add(tmp);
            }
            return;
        }
        for(int i = start;i<=end;i++){
            if(num%i == 0){
                prev.add(i);
                dfs(result, prev, i, num/i, num/i);
                prev.remove(prev.size()-1);
            }
        }
    }
}
