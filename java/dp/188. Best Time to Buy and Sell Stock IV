class Solution {
    public int maxProfit(int k, int[] prices) {
        int result = 0;
        if(k >= prices.length/2){
            for(int i = 1;i<prices.length;i++){
                if(prices[i] > prices[i-1]){
                    result += prices[i]-prices[i-1];
                }
            }
            return result;
        }
        int dp[][] = new int[2][];
        for(int i = 0;i<2;i++){
            dp[i] = new int[k+1];
            for(int kk = 0;kk<=k;kk++){
                dp[i][kk] = Integer.MIN_VALUE;
            }
        }
        dp[1][0] = 0;
        for(int i = 0;i<prices.length;i++){
            for(int j = k;j>=1;j--){
                
                dp[1][j] = Math.max(dp[1][j], dp[0][j] == Integer.MIN_VALUE?Integer.MIN_VALUE:dp[0][j]+prices[i]); //sell
                dp[0][j] = Math.max(dp[0][j], dp[1][j-1] == Integer.MIN_VALUE?Integer.MIN_VALUE:dp[1][j-1]-prices[i]); // buy
            }
        }
        
        for(int i = 1;i<=k;i++){
            result = Math.max(result, dp[1][i]);
        }
        return result;
    }
}
