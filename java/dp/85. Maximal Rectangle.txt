class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix==null || matrix.length == 0 || matrix[0].length == 0){
            return 0;
        }
        int row = matrix.length;
        int col = matrix[0].length;
        int dp[] = new int[col];
        for(int i = 0;i<col;i++){
            dp[i] = 0;
        }
        int maxArea = 0;
        Stack<Integer> stack;
        for(int i = 0;i<row;i++){
            stack = new Stack<Integer>();
            for(int j = 0;j<col;j++){
                if(matrix[i][j] == '0'){
                    dp[j] = 0;
                }else{
                    dp[j]++;
                }
                
                while(!stack.empty() && dp[stack.peek()] >= dp[j]){
                    int idx = stack.pop();
                    int area= (j-1- (stack.empty()?0:stack.peek()+1) + 1)*dp[idx];
                    maxArea = area > maxArea?area:maxArea;
                }
                stack.push(j);
            }
            int pkIdx = stack.peek();
            while(!stack.empty()){
                int idx = stack.pop();
                int area= (pkIdx- (stack.empty()?0:stack.peek()+1) + 1)*dp[idx];
                maxArea = area > maxArea?area:maxArea;
            }
            
        }
        return maxArea;
    }
}