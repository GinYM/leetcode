class Solution {
    public int findMaxForm(String[] strs, int m, int n) {
        int dp[][][] = new int[strs.length][m+1][n+1]; //m 0, n 1
        int count0, count1;
        count0 = 0;
        count1 = 0;
        for(int idx = 0;idx<strs[0].length();idx++){
            if(strs[0].charAt(idx) == '0') count0++;
            else count1++;
        }
        if(count0 <=m && count1 <= n)
            dp[0][count0][count1] = 1;
        for(int i = 1;i<strs.length;i++){
            count0 = 0;
            count1 = 0;
            for(int idx = 0;idx<strs[i].length();idx++){
                if(strs[i].charAt(idx) == '0') count0++;
                else count1++;
            }
            for(int idx1 = 0;idx1 <= m;idx1++){
                for(int idx2 = 0;idx2 <= n;idx2++){
                    if(idx1 >= count0 && idx2 >= count1){
                        dp[i][idx1][idx2] = Math.max(dp[i-1][idx1-count0][idx2-count1]+1,dp[i-1][idx1][idx2]);
                    }else{
                        dp[i][idx1][idx2] = dp[i-1][idx1][idx2];
                    }
                }
            }
        }
        int ret = 0;
        for(int i = 0;i<=m;i++){
            for(int j = 0;j<=n;j++){
                ret = Math.max(ret, dp[strs.length-1][i][j]);
            }
        }
        
        return ret;
    }
}
