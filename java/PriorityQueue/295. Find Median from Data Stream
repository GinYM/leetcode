class MedianFinder {
    Queue<Integer> left,right;
    /** initialize your data structure here. */
    public MedianFinder() {
        left = new PriorityQueue<Integer>((a,b)->{
           return b-a; 
        });
        right = new PriorityQueue<Integer>((a,b)->{
            return a-b;
        });
    }
    
    public void addNum(int num) {
        if(left.isEmpty()){
            left.offer(num);
            return;
        }
        if(left.peek() < num){
            right.offer(num);
        }else{
            left.offer(num);
        }
        if(Math.abs(left.size()-right.size()) >1){
            if(left.size() > right.size()){
                right.offer(left.poll());
            }else{
                left.offer(right.poll());
            }
        }
    }
    
    public double findMedian() {
        if(left.size() == right.size()){
            return ((double)left.peek()+right.peek())/2;
        }else{
            if(left.size() > right.size()){
                return left.peek();
            }else{
                return right.peek();
            }
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
