class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i = 0; i<nums.length;i++){
            if(map.containsKey(nums[i])){
                map.put(nums[i], map.get(nums[i])+1);
            }else{
                map.put(nums[i], 1);
            }
        }
        PriorityQueue< Map.Entry<Integer, Integer>> queue = new PriorityQueue<Map.Entry<Integer, Integer>>(map.size(), new Comparator<Map.Entry<Integer, Integer>>(){
           public int compare(Map.Entry<Integer, Integer> o1, Map.Entry<Integer, Integer> o2){
               return o2.getValue() - o1.getValue();
           } 
        });
        for(Map.Entry<Integer, Integer> entry : map.entrySet()){
            queue.add(entry);
        }
        List<Integer> result = new ArrayList<Integer>();
        for(int i = 0;i<k;i++){
            result.add(queue.poll().getKey());
        }
        return result;
    }
}
