class Solution {
    public void solve(char[][] board) {
        if(board == null || board.length ==0 || board[0].length == 0){
            return;
        }
        int row = board.length;
        int col = board[0].length;
        for(int i = 0;i<row;i++){
            fill(board, i, 0);
            fill(board, i, col-1);
        }
        for(int j = 0;j<col;j++){
            fill(board, 0, j);
            fill(board, row-1, j);
        }
        for(int i = 0;i<row;i++){
            for(int j = 0;j<col;j++){
                if(board[i][j] == 'O'){
                    board[i][j] = 'X';
                }else if(board[i][j] == 'Y'){
                    board[i][j] = 'O';
                }
            }
        }
    }
    private void fill(char [][]board, int i, int j){
        if(board[i][j] != 'O'){
            return;
        }
        if(board[i][j] == 'Y'){
            return;
        }
        int row = board.length;
        int col = board[0].length;
        board[i][j] = 'Y';
        if(i+1 < row && board[i+1][j] == 'O'){
            fill(board, i+1, j);
        }
        if(i-1 >=0 && board[i-1][j] == 'O'){
            fill(board, i-1, j);
        }
        if(j+1 < col && board[i][j+1] == 'O'){
            fill(board, i, j+1);
        }
        if(j-1 >=0 && board[i][j-1] == 'O'){
            fill(board, i, j-1);
        }
    }
}
