class MyCircularQueue {
    class Node{
        public int val;
        public Node next;
        public Node(){
            next = null;
            val = 0;
        }
        public Node(int value){
            next = null;
            val = value;
        }
    }
    public int capacity;
    public int size;
    public Node head;
    public Node tail;
    /** Initialize your data structure here. Set the size of the queue to be k. */
    public MyCircularQueue(int k) {
        capacity = k;
        size = 0;
        head = new Node();
        tail = head;
        tail.next = head;
    }
    
    /** Insert an element into the circular queue. Return true if the operation is successful. */
    public boolean enQueue(int value) {
        if(size == capacity){
            return false;
        }
        Node node = new Node(value);
        node.next = head;
        tail.next = node;
        tail = node;
        size++;
        return true;
    }
    
    /** Delete an element from the circular queue. Return true if the operation is successful. */
    public boolean deQueue() {
        if(size == 0){
            return false;
        }
        head.next = head.next.next;
        size--;
        if(size == 0) tail = head;
        return true;
    }
    
    /** Get the front item from the queue. */
    public int Front() {
        return size == 0 ? -1 : head.next.val;
    }
    
    /** Get the last item from the queue. */
    public int Rear() {
        return size == 0 ? -1 :  tail.val;
    }
    
    /** Checks whether the circular queue is empty or not. */
    public boolean isEmpty() {
        return size == 0;
    }
    
    /** Checks whether the circular queue is full or not. */
    public boolean isFull() {
        return size == capacity;
    }
}

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue obj = new MyCircularQueue(k);
 * boolean param_1 = obj.enQueue(value);
 * boolean param_2 = obj.deQueue();
 * int param_3 = obj.Front();
 * int param_4 = obj.Rear();
 * boolean param_5 = obj.isEmpty();
 * boolean param_6 = obj.isFull();
 */
