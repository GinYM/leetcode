class Solution {
    public boolean isPossible(int[] nums) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int n : nums){
            map.put(n, map.getOrDefault(n, 0)+1);
        }
        Map<Integer, Integer> append = new HashMap<Integer, Integer>();
        for(int n : nums){
            if(map.get(n) == 0){
                continue;
            }else if(append.getOrDefault(n, 0) > 0){
                // append to previsou subsequence
                append.put(n, append.get(n)-1);
                append.put(n+1, append.getOrDefault(n+1,0)+1);
            }else if(map.getOrDefault(n+1, 0) > 0 && map.getOrDefault(n+2,0)>0 ){
                map.put(n+1, map.get(n+1)-1);
                map.put(n+2, map.get(n+2)-1);
                append.put(n+3, append.getOrDefault(n+3, 0)+1);
            }else{
                return false;
            }
            map.put(n, map.getOrDefault(n, 0)-1);
            
        }
        return true;
    }
}
