/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        if(root == null) return result;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        int countTotal=1;
        int countCur = 0;
        int countNext = 1;
        int maxVal = Integer.MIN_VALUE;
        
        while(queue.isEmpty() == false){
            TreeNode node = queue.poll();
            maxVal = Math.max(maxVal, node.val);
            countCur++;
            if(countCur == countNext){
                result.add(maxVal);
                maxVal = Integer.MIN_VALUE;
                
            }
            if(node.left!=null){
                queue.offer(node.left);
                countTotal++;
            }
            if(node.right!=null){
                queue.offer(node.right);
                countTotal++;
            }
            if(countCur == countNext) countNext = countTotal;
        }
        return result;
    }
}
