/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Codec {

    // Encodes a tree to a single string.
    public String serialize(TreeNode root) {
        if(root == null){
            return "#";
        }
        return Integer.toString(root.val)+","+serialize(root.left)+","+serialize(root.right);
    }

    // Decodes your encoded data to tree.
    public TreeNode deserialize(String data) {
        return preOrder(data.split(","), new int[]{0});
        
    }
    
    public TreeNode preOrder(String data[], int index[]){
        
        int idx = index[0];
        index[0]++;
        if(data[idx].equals("#")){
            return null;
        }
        TreeNode node = new TreeNode(Integer.parseInt(data[idx]));
        node.left = preOrder(data, index);
        node.right = preOrder(data, index);
        return node;
    }
}

// Your Codec object will be instantiated and called as such:
// Codec codec = new Codec();
// codec.deserialize(codec.serialize(root));
