/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<String>> printTree(TreeNode root) {
        int depth = getDepth(root, 0);
        int n = (int)Math.pow(2,depth)-1;
        List<List<String>> result = new ArrayList<List<String>>(depth);
        for(int i = 0;i<depth;i++){
            List<String> list = new ArrayList<String>(n);
            for(int j = 0;j<n;j++) list.add("");
            result.add(list);
        }
        print(root, 0, n-1, result, 0);
        return result;
    }
    
    public void print(TreeNode node, int left, int right,  List<List<String>> result, int depth){
        if(node == null) return;
        int mid = (left+right)/2;
        result.get(depth).set(mid, ""+node.val);
        print(node.left, left, mid-1, result, depth+1);
        print(node.right, mid+1, right, result, depth+1);
    }
    
    public int getDepth(TreeNode root, int count){
        if(root == null){
            return count;
        }
        return Math.max(getDepth(root.left, count+1), getDepth(root.right, count+1));
    }
}
