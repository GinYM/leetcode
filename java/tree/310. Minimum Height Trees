class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        List<Integer> result = new ArrayList<Integer>();
        if(n == 1){
            result.add(0);
            return result;
        }
        Set<Integer> node[] = new Set[n];
        for(int []edge : edges){
            if(node[edge[0]] == null){
                node[edge[0]] = new HashSet<Integer>();
            }
            if(node[edge[1]] == null){
                node[edge[1]] = new HashSet<Integer>();
            }
            node[edge[0]].add(edge[1]);
            node[edge[1]].add(edge[0]);
        }
        Set<Integer> leaves = new HashSet<Integer>();
        for(int i = 0;i<n;i++){
            if(node[i].size() == 1){
                leaves.add(i);
            }
        }
        while(n > 2){
            n-=leaves.size();
            Set<Integer> newLeaves = new HashSet<Integer>();
            for(int i : leaves){
                int neighbor = node[i].iterator().next();
                node[neighbor].remove(i);
                if(node[neighbor].size() == 1){
                    newLeaves.add(neighbor);
                }
            }
            leaves = newLeaves;
        }
        result = new ArrayList<Integer>(leaves);
        return result;
    }
    
}
