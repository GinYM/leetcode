/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {

    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Random r;
    ListNode root;
    public Solution(ListNode head) {
        root = head;
        r = new Random();
    }
    
    /** Returns a random node's value. */
    public int getRandom() {
        int n = 1;
        int result = 0;
        ListNode head = root;
        while(head!=null){
            if(r.nextInt(n) == 0){
                result = head.val;
            }
            head = head.next;
            n++;
        }
        return result;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
