class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.length() == 0){
            return 0;
        }
        //construct next
        int []next = new int[needle.length()];
        next[0] = -1;
        int k = -1; // previous index
        int j = 0; //current index
        while(j<needle.length()-1){
            if(k == -1 || needle.charAt(k) == needle.charAt(j)){
                k++;
                j++;
                if (needle.charAt(j) != needle.charAt(k)){
                    next[j] = k;
                }else{
                    next[j] = next[k];
                }
            }else{
                k = next[k];
            }
        }
        //find substring
        int i = 0;
        j=0;
        while(i<haystack.length()){
            if(j==-1 || haystack.charAt(i) == needle.charAt(j)){
                i++;
                j++;
            }else{
                j = next[j];
            }
            if(j == needle.length()){
                break;
            }
        }
        if(j == needle.length()){
            return i-j;
        }else{
            return -1;
        }
        
    }
}
