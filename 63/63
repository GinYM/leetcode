class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        vector<vector<int> > result(m+1,vector<int> (n+1,0));
        result[1][1]=1-obstacleGrid[0][0];
        for(int j = 2;j<=n;j++)
        {
            result[1][j] = result[1][j-1]*(1-obstacleGrid[0][j-1]);
        }
        for(int i = 2;i<=m;i++)
        {
            result[i][1] = result[i-1][1]*(1-obstacleGrid[i-1][0]);
        }
        for(int i = 2;i<=m;i++)
        {
            for(int j = 2;j<=n;j++)
            {
                if(obstacleGrid[i-1][j-1] ==0)
                {
                    if(i==1)
                    {
                        result[i][j]=1;
                    }
                    else
                    {
                        result[i][j] = result[i-1][j]+result[i][j-1];
                    }
                }
            }
        }
        return result[m][n];
    }
};
