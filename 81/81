class Solution {
public:
    bool search(vector<int>& nums, int target) {
        return bs(nums,target,0,nums.size()-1);
    }
private:
    bool bs(vector<int>&nums,int target,int left,int right)
    {
        if(left>right)
            return false;
        if(left==right)
        {
            return nums[left]==target;
        }
        if(left>right)
            return false;
        int mid = (left+right)/2;
        if(nums[mid] == target)
            return true;
        if(nums[left]<nums[right])
        {
            if(target<nums[mid])
                return bs(nums,target,left,mid-1);
            else
                return bs(nums,target,mid+1,right);
        }
        else if(nums[left]>nums[right])
        {
            if(nums[mid]>=nums[left])
            {
                if(target>nums[mid])
                    return bs(nums,target,mid+1,right);
                else if(target>=nums[left])
                    return bs(nums,target,left,mid-1);
                else
                    return bs(nums,target,mid+1,right);
            }
            else
            {
                if(target<nums[mid])
                    return bs(nums,target,left,mid-1);
                else if(target<=nums[right])
                    return bs(nums,target,mid+1,right);
                else
                    return bs(nums,target,left,mid-1);
            }
        }
        else
        {
            if(nums[mid] > nums[left])
            {
                if(target>nums[mid])
                    return bs(nums,target,mid+1,right);
            }
            if(nums[mid]<nums[right] && target<nums[mid])
                return bs(nums,target,left,mid-1);
            return bs(nums,target,left,mid-1) || bs(nums,target,mid+1,right);
        }
    }
};
