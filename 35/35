class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        return binary_search(nums,target,0,nums.size()-1);
    }

private:
    int binary_search(vector<int>& nums,int target,int start,int end)
    {
        if(start == end)
        {
            if(nums[start] == target)
            {
                return start;
            }
            else if(target < nums[start] )
            {
                return start;
            }
            else
            {
                return start+1;
            }
        }
        
        int mid = (start+end)/2;
        if(target < nums[mid])
        {
            return binary_search(nums,target,start,mid);
        }
        else if(target > nums[mid])
        {
            return binary_search(nums,target,mid+1,end);
        }
        else
        {
            return mid;
        }
    }
};
